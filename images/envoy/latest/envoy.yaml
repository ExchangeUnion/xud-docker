admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 9090 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: xud_service
                  max_grpc_timeout: 0s
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          http_filters:
          - name: envoy.cors
          - name: envoy.grpc_web
          - name: envoy.router
      # If we remove this tls_context section then we will get the error below on grpc-web client
      # upstream connect error or disconnect/reset before headers. reset reason: connection failure
      #
      # With tls_context specified here the grpc-web client now gets the error
      # Http response at 400 or 500 level
      # P.S. xucli getinfo is working (means xud grpc 28885 is working)
      tls_context:
        common_tls_context:
          # alpn means Application-Layer Protocol Negotiation
#          alpn_protocols: ["h2", "http/1.1"]
          alpn_protocols: "h2"
          tls_certificates:
            - certificate_chain: { filename: "/root/.xud/tls.cert" }
              private_key: { filename: "/root/.xud/tls.key" }
#      transport_socket:
#        name: envoy.transport_sockets.tls
#        typed_config:
#          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
#          common_tls_context:
#            alpn_protocols: ["h2", "http/1.1"]
#            tls_certificates:
#              - certificate_chain: { filename: "/root/.xud/tls.cert" }
#                private_key: { filename: "/root/.xud/tls.key" }

  clusters:
  - name: xud_service
    connect_timeout: 0.25s
    type: strict_dns
    http2_protocol_options: {}
    upstream_connection_options:
      tcp_keepalive:
        keepalive_time: 300
    lb_policy: round_robin
    # win/mac hosts: Use address: host.docker.internal instead of address: localhost in the line below
    hosts: [{ socket_address: { address: xud, port_value: 28885 }}]
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
#        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
        sni: xud
        common_tls_context:
#          alpn_protocols: "h2"
          tls_certificates:
            - certificate_chain: { filename: "/root/.xud/tls.cert" }
              private_key: { filename: "/root/.xud/tls.key" }
#          validation_context:
#            verify_subject_alt_name: [ xud ]
