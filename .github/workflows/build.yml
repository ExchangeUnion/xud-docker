name: Build

on:
  push:
    branches:
      - '*'

jobs:
  build_images:
    name: Build Docker images
    strategy:
      matrix:
        os: [ linux ]
        arch: [ amd64, arm64 ]
    runs-on: ubuntu-20.04
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Build and push
        run: tools/push -p ${{ matrix.os }}/${{ matrix.arch }}

  build_launcher:
    name: Build binary launcher
    strategy:
      matrix:
        go-version: [ 1.15.x ]
        os: [ linux, darwin, windows ]
        arch: [ amd64, arm64 ]
        exclude:
          - os: windows
            arch: arm64
          - os: darwin
            arch: arm64
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch dependencies
        working-directory: ./launcher
        run: go mod vendor
      - name: Build
        working-directory: ./launcher
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} make build
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: |
            launcher/launcher
            launcher/launcher.exe

  integration_tests:
    name: Integration tests
    needs: [build_images, build_launcher]
    runs-on: ubuntu-20.04
    steps:
      - name: Dummy test
        run: echo "Add more tests here!"
