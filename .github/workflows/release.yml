name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+-*'


jobs:
  create_release:
    name: Create a release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          prerelease: true
          draft: true

  build:
    needs: create_release
    name: Build artifacts
    strategy:
      matrix:
        go-version: [ 1.15.x ]
        os: [ linux, darwin, windows ]
        arch: [ amd64 ]

    runs-on: ubuntu-latest

    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch dependencies
        working-directory: ./launcher
        run: go mod vendor

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Build
        working-directory: ./launcher
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          make VERSION=${{ steps.get_version.outputs.VERSION }} build
          make zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: |
            launcher/launcher
            launcher/launcher.exe

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: launcher/launcher.zip
          asset_name: launcher-${{ matrix.os }}-${{ matrix.arch }}.zip
          asset_content_type: application/zip
